control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample)
})
control_parallel <- sort(unlist(control_parallel), decreasing = FALSE)
plot(control_parallel)
summary(control_parallel)
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control$retention_1,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample)
})
control_parallel <- sort(unlist(control_parallel), decreasing = FALSE)
summary(control_parallel)
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(mean(control$retention_1),
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample)
})
control_parallel <- sort(unlist(control_parallel), decreasing = FALSE)
summary(control_parallel)
treatment_vector <- vector(length = 500)
treatment_parallel <- mclapply(x = 1:500, FUN = function(i){
resample <- sample(mean(treatment$retention_1),
size = length(treatment),
replace = TRUE)
treatment_vector[i] <- mean(resample)
})
control = data[data$version == "gate_30",]
treatment = data[data$version == "gate_40",]
# boostrapping for the control group
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(mean(control$retention_1),
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample)
})
control_parallel <- sort(unlist(control_parallel), decreasing = FALSE)
# boostrapping for the treatment group
treatment_vector <- vector(length = 500)
treatment_parallel <- mclapply(x = 1:500, FUN = function(i){
resample <- sample(mean(treatment$retention_1),
size = length(treatment),
replace = TRUE)
treatment_vector[i] <- mean(resample)
})
treatment_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(mean(treatment$retention_1),
size = length(treatment),
replace = TRUE)
treatment_vector[i] <- mean(resample)
})
treatment_parallel <- sort(unlist(treatment_parallel), decreasing = FALSE)
# combine these two datasets
boots_data <- cbind(control_parallel, treatment_parallel)
View(boots_1.resample)
View(boots_data)
ggplot(boots_data) +
geom_density(aes(x = control_parallel)) +
geom_density(aes(x = treatment_parallel))
table(boots_data)
# combine these two datasets
summary(treatment_parallel)
# combine these two datasets
summary(control_parallel)
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control$retention_1,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample)
})
control_parallel <- sort(unlist(control_parallel), decreasing = FALSE)
# boostrapping for the treatment group
treatment_vector <- vector(length = 500)
treatment_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(treatment$retention_1,
size = length(treatment),
replace = TRUE)
treatment_vector[i] <- mean(resample)
})
treatment_parallel <- sort(unlist(treatment_parallel), decreasing = FALSE)
# combine these two datasets
summary(control_parallel)
# combine these two datasets
boots_data <- cbind(control_parallel, treatment_parallel)
View(boots_data)
# combine these two datasets
boots_data <- as.data.frame(cbind(control_parallel, treatment_parallel))
ggplot(boots_data) +
geom_density(aes(x = control_parallel)) +
geom_density(aes(x = treatment_parallel))
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample$retention_1)
})
control_parallel <- sort(unlist(control_parallel))
treatment_vector <- vector(length = 500)
treatment_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(treatment,
size = length(treatment),
replace = TRUE)
treatment_vector[i] <- mean(resample$retention_1)
})
treatment_parallel <- sort(unlist(treatment_parallel))
# combine these two datasets
boots_data <- as.data.frame(cbind(control_parallel, treatment_parallel))
View(boots_data)
control_vector[i] <- resample$retention_1
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
control_vector[i] <- resample$retention_1
})
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample$retention_1)
})
control_parallel <- sort(unlist(control_parallel))
summary(control_parallel)
diff_1 = mean(control$retention_1) - mean(treatment$retention_1)
# boostrapping for the control group
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control$retention_1,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample$retention_1)
})
View(control)
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control$retention_1,
size = length(control),
replace = TRUE)
control_vector[i] <- resample$retention_1
})
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
control_vector[i] <- resample$retention_1
})
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample$retention_1)
})
control_parallel <- sort(unlist(control_parallel))
summary(control_parallel)
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(mean(control$retention_1),
size = length(control),
replace = TRUE)
control_vector[i] <- resample
})
control_parallel <- sort(unlist(control_parallel))
summary(control_parallel)
boostrapping for the control group
# boostrapping for the control group
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(mean(control$retention_1),
size = length(control),
replace = TRUE)
control_vector[i] <- mean(resample)
})
control_parallel <- sort(unlist(control_parallel))
summary(control_parallel)
# boostrapping for the control group
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
}
control_vector[i] <- mean(resample$retention_1)
control_vector <- vector(length = 500)
control_parallel <- mclapply(X = 1:500, FUN = function(i){
resample <- sample(control,
size = length(control),
replace = TRUE)
}
control_vector[i] <- mean(resample$retention_1)
data %>%
group_by(version) %>%
mutate(mean_1 = mean(sample(retention_1, replace = TRUE))) %>%
ggplot(aes(x=mean_1)) +
geom_freqpoly()
data %>%
group_by(version) %>%
mutate(mean_1 = mean(sample(retention_1, replace = TRUE))) %>%
ggplot(aes(x=mean_1)) +
geom_freqpoly()
# boostrapping for the control group
control_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(control, length(control), replace = T)
control_vector[i] <- mean(boots.data$retention_1)
}
hist(control_vector)
hist(control_vector)
summary(control$vector)
control_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(control, length(control), replace = T)
control_vector[i] <- mean(boots.data$retention_1)
}
summary(control$vector)
control_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(control$retention_1, length(control), replace = T)
control_vector[i] <- mean(boots.data)
}
summary(control$vector)
table(control$vector)
hist(control_vector)
control_vector <- as.data.frame(control_vector)
View(control_vector)
hist(control_vector)
hist(control_vector$control_vector)
# boostrapping for the treatment group
treatment_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(treatment$retention_1, length(treatment), replace = T)
treatment_vector[i] <- mean(boots.data)
}
# combine the data
boots.data <- as.data.frame(cbind(control_vector, treatment_vector))
View(boots.data)
ggplot(boots_data) +
geom_density(aes(x = control_vector)) +
geom_density(aes(x = treatment_vector))
ggplot(boots_data) +
geom_histogram(aes(x = control_vector)) +
geom_histogram(aes(x = treatment_vector))
ggplot(boots_data) +
geom_histogram(aes(y = control_vector)) +
geom_histogram(aes(y = treatment_vector))
ggplot(boots_data) +
geom_histogram(aes(y = control_vector)) +
geom_histogram(aes(y = treatment_vector))
ggplot(boots_data) +
geom_density(aes(x = control_vector)) +
geom_density(aes(x = treatment_vector))
# combine the data
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = c(control_vector, treatment_vector)
)
ggplot(boots_data, aes(x = values), fill = type) +
geom_density()
# combine the data
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = c(control_vector, treatment_vector)
)
ggplot(boots_data, aes(x = values), fill = type) +
geom_density()
# combine the data
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = c(control_vector, as.data.frame(treatment_vector))
)
View(boots.data)
# combine the data
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = rbind(control_vector, treatment_vector)
)
library(tidyverse)
library(psych)
library(ggplot2)
# check group size of the control and the treatment
data <- read.csv("cookie_cats.csv")
data %>%
group_by(version) %>%
summarize(n = n())
# check the data distribution
rounds <- data %>%
group_by(sum_gamerounds) %>%
summarise(n = n())
ggplot(rounds, aes(x=sum_gamerounds, y = n)) +
geom_line() +
xlim(0,100) +
theme_bw() +
labs(x = "Game Rounds",y = "Users")
# check differences in retention_1
data %>%
group_by(version) %>%
summarise(mean_1 = mean(retention_1))
# check differences in retention_7
data %>%
group_by(version) %>%
summarise(mean_7 = mean(retention_7))
data$version <- as.character(data$version)
control = data[data$version == "gate_30",]
treatment = data[data$version == "gate_40",]
# boostrapping for the control group
control_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(control$retention_1, length(control), replace = T)
control_vector[i] <- mean(boots.data)
}
# boostrapping for the treatment group
treatment_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(treatment$retention_1, length(treatment), replace = T)
treatment_vector[i] <- mean(boots.data)
}
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = rbind(control_vector, treatment_vector)
)
View(boots.data)
# combine the data
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = cbind(control_vector, treatment_vector)
)
View(boots.data)
# combine the data
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = c(control_vector, treatment_vector)
)
ggplot(boots_data, aes(x = values), fill = type) +
geom_density()
boots.data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = c(control_vector, treatment_vector)
)
ggplot(boots.data, aes(x = values), fill = type) +
geom_density()
ggplot(boots.data, aes(x = values, fill = type)) +
geom_density()
# boostrapping for the control group
control_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(control, length(control), replace = T)
control_vector[i] <- mean(boots.data$retention_1)
}
summary(control_vector)
control_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(control$retention_1, length(control), replace = T)
control_vector[i] <- mean(boots.data)
}
summary(control_vector)
# boostrapping for the treatment group
treatment_vector <- vector(length = 500)
for (i in 1:500){
boots.data <- sample(treatment$retention_1, length(treatment), replace = T)
treatment_vector[i] <- mean(boots.data)
}
boots_data <- data.frame(
type = c(rep("control",500),rep("treatment",500)),
values = c(control_vector, treatment_vector)
)
ggplot(boots_data, aes(x = values, fill = type)) +
geom_histogram()
ggplot(boots_data, aes(x = values, color = type)) +
geom_density()
hist(boots_data$values)
ggplot(boots_data, aes(x = values, color = type)) +
geom_density()
ggplot(boots_data, aes(x = values, color = type)) +
geom_freqpoly()
ggplot(boots_data, aes(x = values, fill = type)) +
geom_freqpoly()
ggplot(boots_data, aes(x = values, fill = type)) +
geom_freqpoly(binwidth = 500)
ggplot(boots_data, aes(x = values, fill = type)) +
geom_freqpoly(binwidth = 50)
ggplot(boots_data, aes(x = values, fill = type)) +
geom_freqpoly(binwidth = 5)
ggplot(boots_data, aes(x = values, fill = type)) +
geom_histogram(binwidth = 5)
ggplot(boots_data, aes(x = values, fill = type)) +
geom_histogram()
ggplot(boots_data, aes(x = values, fill = type)) +
geom_density()
ggplot(boots_data, aes(x = values, color = type)) +
geom_density()
ggplot(boots_data, aes(x = values, color = type)) +
geom_density() +
theme_bw()
# combine the data
boots_data <- cbind(control_vector, treatment_vector)
# combine the data
boots_data <- as.data.frame(cbind(control_vector, treatment_vector))
boots_data$diff <- (boots_data$control_vector - boots_data$treatment_vector)/boots_data$treatment_vector * 100
View(boots_data)
mean(boots_data$diff > 0)
View(boots_data)
nrow(boots_data$diff > 0)/500
sum(boots_data$diff > 0)/500
nrow(boots_data$diff>0)
sum(boots_data$diff>0)
mean(boots_data$diff>0)
sum(is.na(boots_data$diff))
mean(na.omit(boots_data)$diff>0)
boots_data$diff <- boots_data$control_vector - boots_data$treatment_vector
mean(na.omit(boots_data)$diff>0)
for (i in 1:500){
boots.data <- sample(control, length(control), replace = T)
control_vector[i] <- mean(boots.data$retention_1)
}
summary(control_vector)
boots_data[i] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1)) %>% ungroup() %>% pivot_wider(version, mean)
boots_data <- vector(500)
boots_data <- vector(length = 500)
for (i in 1:500){
boots_data[i] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1)) %>% ungroup() %>% pivot_wider(version, mean)
}
boots_data %>%
pivot_longer(key = "version", value = "mean", ... = c(gate_30, gate_40)) %>%
ggplot(aes(x = mean, color = version)) +
geom_density() +
theme_bw()
boots_data %>%
pivot_longer(key = "version", value = "mean", ... = c("gate_30", "gate_40")) %>%
ggplot(aes(x = mean, color = version)) +
geom_density() +
theme_bw()
boots_data %>%
gather(key = "version", value = "mean", ... = c("gate_30", "gate_40")) %>%
ggplot(aes(x = mean, color = version)) +
geom_density() +
theme_bw()
boots_data %>%
gather(key = "version", value = "mean", ... = c(gate_30, gate_40)) %>%
ggplot(aes(x = mean, color = version)) +
geom_density() +
theme_bw()
boots_data <- matrix(0,2)
colnames(boots_data) <- c("gate_30","gate_40")
boots_data <- matrix(nrow = 0, ncol = 2)
colnames(boots_data) <- c("gate_30","gate_40")
boots_data <- as_tibble(boots_data)
for (i in 1:200){
boots_data[i,] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1)) %>% ungroup() %>% pivot_wider(version, mean)
}
boots_data[i,] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1)) %>% ungroup() %>% spread(version, mean)
for (i in 1:200){
boots_data[i,] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1)) %>% ungroup() %>% spread(version, mean)
}
boots_data %>%
gather(key = "version", value = "mean", ... = c(gate_30, gate_40)) %>%
ggplot(aes(x = mean, color = version)) +
geom_density() +
theme_bw()
View(boots_data)
ggplot(boots_data) +
geom_density(x = gate_30) +
theme_bw()
ggplot(boots_data) +
geom_density(aes(x = gate_30)) +
theme_bw()
ggplot(boots_data) +
geom_density(aes(x = gate_30)) +
geom_density(aes(x = gate_40))
for (i in 1:200){
boots_data[i,] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1))
}
for (i in 1:200){
boots_data[i,] <- data[sample(1:nrow(data), nrow(data), replace = T),] %>% group_by(version) %>% summarise(mean = mean(retention_1)) %>% ungroup() %>% spread(version, mean)
}
ggplot(boots_data) +
geom_density(aes(x = gate_30), color = "red") +
geom_density(aes(x = gate_40), color = "blue")
theme_bw()
ggplot(boots_data) +
geom_density(aes(x = gate_30), color = "red") +
geom_density(aes(x = gate_40), color = "blue")
theme_bw()
ggplot(boots_data) +
geom_density(aes(x = gate_30), color = "red") +
geom_density(aes(x = gate_40), color = "blue") +
theme_bw()
ggplot(boots_data) +
geom_density(aes(x = gate_30), color = "red") +
geom_density(aes(x = gate_40), color = "blue") +
theme_bw() +
labs(x = "Estimates", "Density")
ggplot(boots_data) +
geom_density(aes(x = gate_30), color = "red") +
geom_density(aes(x = gate_40), color = "blue") +
theme_bw() +
labs(x = "Estimates", y = "Density")
boots_data$diff = ((boots_data$gate_30 - boots_data$gate_40)/
boots_data$gate_40)*100
mean(boots_data$diff > 0)
